<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPtgAQD7YAEAAAAAAAAA
        AAACAAEAAgABAAIAAQECAAEAAgABawIAAe4CAAH/AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH+AgAB/wIAAe8CAAFsAgABAAIA
        AQECAAEAAgABAAIAAQACAAECAgABAAIAAYcCAAH/AgABmwIAAVkCAAFZAgABWQIAAVkCAAFZAgABWQIA
        AVkCAAFZAgABWQIAAVgCAAFbAgABTwIAAUsCAAFZAgABWQIAAVgCAAFZAgABWQIAAVkCAAFaAgABnAIA
        Af8CAAGHAgABAAIAAQICAAEAAgABAgIAAQACAAEgAgAB/wIAAWgCAAEAAgABAwIAAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAAEAAgABAQIAAQACAAEfAgABMQAAAQACAAEAAgABAAAAAAAAAAAAAgABAAIA
        AQMCAAEAAgABaQIAAf8CAAEgAgABAAIAAQICAAEEAgABAAIAAVICAAH/AgABFQIAAQACAAEFAgABBAIA
        AQMCAAEGAgABAgIAAQUCAAEEAgABBQIAAQkCAAEAAgABUQIAAf8CAAH/AgABmgIAAQACAAEGAgABBAIA
        AQQCAAEEAgABBQIAAQACAAEWAgAB/wIAAVMCAAEAAgABBAIAAQQCAAEAAgABTQIAAf8CAAEbAgABAAIA
        AQECAAEAAgABAAIAAQACAAEHAgABAgIAAQACAAEBAgABBAIAAQACAAGXAgAB/wIAAf4CAAHjAgABCAIA
        AQACAAEBAAAAAAIAAQACAAEBAgABAAIAARsCAAH/AgABTQIAAQACAAEEAgABAgIAAQACAAEZAgAB/wIA
        AVoCAAEAAgABAwIAAQMCAAEAAgABTwIAAe8CAAGSAgABAAIAARQCAAGrAgABsQIAAXACAAH1AgAB/wIA
        AZkCAAEAAgABAgIAAQACAAEAAgABAAIAAQMCAAEAAgABWwIAAf8CAAEZAgABAAIAAQICAAEAAgABAgIA
        AQACAAG/AgABwQIAAQACAAECAgABBAIAAQACAAGdAgAB/wIAAeYCAAEAAgABgwIAAf8CAAH/AgABqgIA
        ASECAAE3AwABAAEAAQACAAEAAAAAAAIAAQACAAEAAgABAgIAAQACAAHCAgABvwIAAQACAAECAgABAAIA
        AQACAAEDAgABAAIAAU0CAAH/AgABMQIAAQACAAEEAgABAAIAAScCAAGxAgABXgIAAQACAAF3AgAB/wIA
        Af8CAAGlAgABAAIAAWkCAAGUAgABAAEAAQACAAEAAgABAAIAAQICAAEAAgABMgIAAf8CAAFNAgABAAIA
        AQMCAAEAAgABAAIAAQACAAQAAgABAAIAAdgCAAGwAgABAAIAAQMCAAEAAgABAAIAAQACAAEBAQABAAIA
        AQICAAF5AgABgQIAAQwCAAEAAgABsgIAAeEAAAEBAAABAAIAAQACAAEAAgABAwIAAQACAAGxAgAB2AIA
        AQADAAQAAgABAAIAAQACAAEAAgABAAIAAQMCAAEAAgABVQIAAf8CAAE1AgABAAIAAQICAAECAgABBQIA
        AQICAAEEAgABkAIAAdkCAAHDAgABRAIAAQACAAEDAgABCwIAAQICAAEAAgABAAIAAQICAAEAAgABNgIA
        Af8CAAFVAgABAAIAAQMCAAEAAgABAAAAAAACAAEAAgABAAIAAQECAAEAAgABzgIAAcACAAEAAgABAgIA
        AQACAAEEAgABAAIAAXQCAAH/AgAB+gIAAf8CAAHuAgABEAIAAScCAAHiAgABvAIAAQoCAAEAAgABAwIA
        AQACAAHBAgABzgIAAQACAAEBAgABAAIAAQAAAAAAAAAAAAIAAQACAAEAAgABAwIAAQACAAFAAgAB/wIA
        AU8CAAEAAgABAwIAAQMCAAEAAgABrAIAAf8CAAH5AgAB+AIAAf8CAAEvAgABXgIAAf8CAAH9AgABLQIA
        AQACAAEAAgABUAIAAf8CAAFAAgABAAIAAQMCAAEAAgABAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAwIA
        AQACAAGsAgAB4QIAAQUCAAEAAgABBAIAAQACAAF3AgAB/wIAAfoCAAH/AgAB7wIAARcCAAEIAgABnAIA
        AXYCAAEAAQAAAAIAAQYCAAHiAgABrAIAAQACAAEDAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAgABAAIA
        AQACAAECAgABAAIAAR8CAAH+AgABfgIAAQACAAEEAgABAAIAAQYCAAGZAgAB7wIAAd0CAAFOAgABAAIA
        AQICAAEAAgABAAIAAQQCAAEAAgABfwIAAf4CAAEfAgABAAIAAQICAAEAAgABAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgABAAIAAQACAAEEAgABAAIAAXgCAAH/AgABJQIAAQACAAECAgABAQIAAQACAAENAgABBgIA
        AQACAAEBAgABAQIAAQQCAAEFAgABAAIAASUCAAH/AgABeAIAAQACAAEEAgABAAIAAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAAEAAgABAAIAAQEBAAEAAgABAgIAAdcCAAG8AgABAAIAAQICAAEBAgABAwIA
        AQACAAEBAgABAwIAAQACAAEAAgABAAIAAQICAAEAAgABvAIAAdcCAAECAAADAAIAAQECAAEAAQABAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQMCAAEAAgABOwIAAf8CAAFeAgABAAIA
        AQQDAAcAAgABAQIAAQECAAEAAgABAAIAAQACAAEEAgABAAIAAV8CAAH/AgABOwIAAQACAAEDAgABAAIA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQMCAAEAAgABkwIA
        AfUCAAEXAgABAAIAAQECAAEAAgABAAIAAQACAAEAAgABAQIAAQACAAEYAgAB9gIAAZMCAAEAAgABAwIA
        AQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAQIA
        AQACAAEKAgAB5AIAAa8CAAEAAgABAwIAAQACAAEAAgABAAIAAQACAAEDAgABAAIAAa8CAAHkAgABCgIA
        AQACAAEBAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA
        AQACAAEAAgABAwIAAQACAAFDAgAB/wIAAV0CAAEAAgABAwIAAQACAAEAAgABAwIAAQACAAFeAgAB/wIA
        AUMCAAEAAgABAwIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAIAAQACAAEAAgABBAIAAQACAAGTAgAB+QIAARsCAAEAAgABAgIAAQICAAEAAgABHAIA
        AfkCAAGTAgABAAIAAQQCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEBAgABAAIAARcCAAH/AgABWQIAAQACAAEEAgABBAIA
        AQACAAFZAgAB/wIAARcCAAEAAgABAQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAEAAgABEAIAAfsCAAFZAgABAAIA
        AQQCAAEEAgABAAIAAVoCAAH8AgABEAIAAQACAAEBAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgABAQIAAQACAAEOAgAB/QIA
        AVoCAAEAAgABBAIAAQQCAAEAAgABWgIAAf0CAAEOAgABAAIAAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEBAgABAAIA
        AQ4CAAH9AgABWgIAAQACAAEEAgABBAIAAQACAAFbAgAB/QIAAQ4CAAEAAgABAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA
        AQECAAEAAgABDgIAAf0CAAFaAgABAAIAAQQCAAEEAgABAAIAAVsCAAH9AgABDgIAAQACAAEBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgABAQIAAQACAAEOAgAB/QIAAVoCAAEAAgABBAIAAQQCAAEAAgABWwIAAf0CAAEOAgABAAIA
        AQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAAEBAgABAAIAAQ4CAAH9AgABWgIAAQACAAEEAgABBAIAAQACAAFbAgAB/QIA
        AQ4CAAEAAgABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAEAAgABEgIAAf0CAAFcAgABAAIAAQcCAAEHAgABAAIA
        AV0CAAH9AgABEgIAAQACAAEBAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAQIAAQACAAEOAgAB/QIAAVkCAAEAAgABBAIA
        AQQCAAEAAgABWgIAAf0CAAEOAgABAAIAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQECAAEAAgABGwIAAWcCAAH8AgABkwIA
        AU0CAAFbAgABWwIAAU0CAAGUAgAB/AIAAWcCAAEbAgABAAIAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABBAIAAQACAAFWAgAB/wIA
        AfwCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8AgAB/wIAAVYCAAEAAgABBAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEAAACCAAAARE/IsiRAEIIkRJBSJEiAkiJIgaJCKITEQSIERIkQBEiYkQ
        ApHIkAMTxFAGI+RQSifqJIRX8CJED/UUqK/6iZFf/IgRP/1EIr/+okV//yJE//8iRP//okX//6JF//+i
        Rf//okX//6JF//8iRP//okX//0AC//9AAv8=
</value>
  </data>
</root>